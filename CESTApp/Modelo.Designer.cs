//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region Metadatos de relaciones en EDM

[assembly: EdmRelationshipAttribute("DBModel", "FK_AreaMedico_AreaCategoria", "Area", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CESTApp.Area), "AreaMedico", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CESTApp.AreaMedico), true)]
[assembly: EdmRelationshipAttribute("DBModel", "FK_AreaMedico_MedicoCE", "MedicoCE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CESTApp.MedicoCE), "AreaMedico", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CESTApp.AreaMedico), true)]
[assembly: EdmRelationshipAttribute("DBModel", "FK_DetalleServicio_Estudio", "Estudio", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CESTApp.Estudio), "DetalleServicio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CESTApp.DetalleServicio), true)]
[assembly: EdmRelationshipAttribute("DBModel", "FK_DetalleServicio_Servicio", "Servicio", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CESTApp.Servicio), "DetalleServicio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CESTApp.DetalleServicio), true)]
[assembly: EdmRelationshipAttribute("DBModel", "FK_Diagnostico_Servicio", "Servicio", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CESTApp.Servicio), "Diagnostico", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CESTApp.Diagnostico), true)]
[assembly: EdmRelationshipAttribute("DBModel", "FK_Servicio_EstadoServicio", "EstadoServicio", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CESTApp.EstadoServicio), "Servicio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CESTApp.Servicio), true)]
[assembly: EdmRelationshipAttribute("DBModel", "FK_Paciente_LugarResidencia", "LugarResidencia", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CESTApp.LugarResidencia), "Paciente", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CESTApp.Paciente), true)]
[assembly: EdmRelationshipAttribute("DBModel", "FK_Servicio_MedicoCanalizador", "MedicoCanalizador", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CESTApp.MedicoCanalizador), "Servicio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CESTApp.Servicio), true)]
[assembly: EdmRelationshipAttribute("DBModel", "FK_Servicio_MedicoCE", "MedicoCE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CESTApp.MedicoCE), "Servicio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CESTApp.Servicio), true)]
[assembly: EdmRelationshipAttribute("DBModel", "FK_UsuarioMedico_MedicoCE", "MedicoCE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CESTApp.MedicoCE), "UsuarioMedico", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CESTApp.UsuarioMedico), true)]
[assembly: EdmRelationshipAttribute("DBModel", "FK_Servicio_Paciente", "Paciente", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CESTApp.Paciente), "Servicio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CESTApp.Servicio), true)]
[assembly: EdmRelationshipAttribute("DBModel", "FK_Rol_Usuario", "Usuario", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CESTApp.Usuario), "Rol", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CESTApp.Rol), true)]
[assembly: EdmRelationshipAttribute("DBModel", "FK_UsuarioMedico_Usuario", "Usuario", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CESTApp.Usuario), "UsuarioMedico", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CESTApp.UsuarioMedico), true)]

#endregion

namespace CESTApp
{
    #region Contextos
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    public partial class DBEntities : ObjectContext
    {
        #region Constructores
    
        /// <summary>
        /// Inicializa un nuevo objeto DBEntities usando la cadena de conexión encontrada en la sección 'DBEntities' del archivo de configuración de la aplicación.
        /// </summary>
        public DBEntities() : base("name=DBEntities", "DBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicializar un nuevo objeto DBEntities.
        /// </summary>
        public DBEntities(string connectionString) : base(connectionString, "DBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicializar un nuevo objeto DBEntities.
        /// </summary>
        public DBEntities(EntityConnection connection) : base(connection, "DBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Métodos parciales
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Propiedades de ObjectSet
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Area> Area
        {
            get
            {
                if ((_Area == null))
                {
                    _Area = base.CreateObjectSet<Area>("Area");
                }
                return _Area;
            }
        }
        private ObjectSet<Area> _Area;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<AreaMedico> AreaMedico
        {
            get
            {
                if ((_AreaMedico == null))
                {
                    _AreaMedico = base.CreateObjectSet<AreaMedico>("AreaMedico");
                }
                return _AreaMedico;
            }
        }
        private ObjectSet<AreaMedico> _AreaMedico;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<DetalleServicio> DetalleServicio
        {
            get
            {
                if ((_DetalleServicio == null))
                {
                    _DetalleServicio = base.CreateObjectSet<DetalleServicio>("DetalleServicio");
                }
                return _DetalleServicio;
            }
        }
        private ObjectSet<DetalleServicio> _DetalleServicio;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Diagnostico> Diagnostico
        {
            get
            {
                if ((_Diagnostico == null))
                {
                    _Diagnostico = base.CreateObjectSet<Diagnostico>("Diagnostico");
                }
                return _Diagnostico;
            }
        }
        private ObjectSet<Diagnostico> _Diagnostico;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<EstadoServicio> EstadoServicio
        {
            get
            {
                if ((_EstadoServicio == null))
                {
                    _EstadoServicio = base.CreateObjectSet<EstadoServicio>("EstadoServicio");
                }
                return _EstadoServicio;
            }
        }
        private ObjectSet<EstadoServicio> _EstadoServicio;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Estudio> Estudio
        {
            get
            {
                if ((_Estudio == null))
                {
                    _Estudio = base.CreateObjectSet<Estudio>("Estudio");
                }
                return _Estudio;
            }
        }
        private ObjectSet<Estudio> _Estudio;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<LugarResidencia> LugarResidencia
        {
            get
            {
                if ((_LugarResidencia == null))
                {
                    _LugarResidencia = base.CreateObjectSet<LugarResidencia>("LugarResidencia");
                }
                return _LugarResidencia;
            }
        }
        private ObjectSet<LugarResidencia> _LugarResidencia;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<MedicoCanalizador> MedicoCanalizador
        {
            get
            {
                if ((_MedicoCanalizador == null))
                {
                    _MedicoCanalizador = base.CreateObjectSet<MedicoCanalizador>("MedicoCanalizador");
                }
                return _MedicoCanalizador;
            }
        }
        private ObjectSet<MedicoCanalizador> _MedicoCanalizador;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<MedicoCE> MedicoCE
        {
            get
            {
                if ((_MedicoCE == null))
                {
                    _MedicoCE = base.CreateObjectSet<MedicoCE>("MedicoCE");
                }
                return _MedicoCE;
            }
        }
        private ObjectSet<MedicoCE> _MedicoCE;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Paciente> Paciente
        {
            get
            {
                if ((_Paciente == null))
                {
                    _Paciente = base.CreateObjectSet<Paciente>("Paciente");
                }
                return _Paciente;
            }
        }
        private ObjectSet<Paciente> _Paciente;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Rol> Rol
        {
            get
            {
                if ((_Rol == null))
                {
                    _Rol = base.CreateObjectSet<Rol>("Rol");
                }
                return _Rol;
            }
        }
        private ObjectSet<Rol> _Rol;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Servicio> Servicio
        {
            get
            {
                if ((_Servicio == null))
                {
                    _Servicio = base.CreateObjectSet<Servicio>("Servicio");
                }
                return _Servicio;
            }
        }
        private ObjectSet<Servicio> _Servicio;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Usuario> Usuario
        {
            get
            {
                if ((_Usuario == null))
                {
                    _Usuario = base.CreateObjectSet<Usuario>("Usuario");
                }
                return _Usuario;
            }
        }
        private ObjectSet<Usuario> _Usuario;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<UsuarioMedico> UsuarioMedico
        {
            get
            {
                if ((_UsuarioMedico == null))
                {
                    _UsuarioMedico = base.CreateObjectSet<UsuarioMedico>("UsuarioMedico");
                }
                return _UsuarioMedico;
            }
        }
        private ObjectSet<UsuarioMedico> _UsuarioMedico;

        #endregion
        #region Métodos AddTo
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Area. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToArea(Area area)
        {
            base.AddObject("Area", area);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet AreaMedico. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToAreaMedico(AreaMedico areaMedico)
        {
            base.AddObject("AreaMedico", areaMedico);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet DetalleServicio. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToDetalleServicio(DetalleServicio detalleServicio)
        {
            base.AddObject("DetalleServicio", detalleServicio);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Diagnostico. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToDiagnostico(Diagnostico diagnostico)
        {
            base.AddObject("Diagnostico", diagnostico);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet EstadoServicio. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToEstadoServicio(EstadoServicio estadoServicio)
        {
            base.AddObject("EstadoServicio", estadoServicio);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Estudio. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToEstudio(Estudio estudio)
        {
            base.AddObject("Estudio", estudio);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet LugarResidencia. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToLugarResidencia(LugarResidencia lugarResidencia)
        {
            base.AddObject("LugarResidencia", lugarResidencia);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet MedicoCanalizador. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToMedicoCanalizador(MedicoCanalizador medicoCanalizador)
        {
            base.AddObject("MedicoCanalizador", medicoCanalizador);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet MedicoCE. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToMedicoCE(MedicoCE medicoCE)
        {
            base.AddObject("MedicoCE", medicoCE);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Paciente. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToPaciente(Paciente paciente)
        {
            base.AddObject("Paciente", paciente);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Rol. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToRol(Rol rol)
        {
            base.AddObject("Rol", rol);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Servicio. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToServicio(Servicio servicio)
        {
            base.AddObject("Servicio", servicio);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Usuario. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToUsuario(Usuario usuario)
        {
            base.AddObject("Usuario", usuario);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet UsuarioMedico. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToUsuarioMedico(UsuarioMedico usuarioMedico)
        {
            base.AddObject("UsuarioMedico", usuarioMedico);
        }

        #endregion
        #region Importaciones de funciones
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        /// <param name="inicio">No hay documentación de metadatos disponible.</param>
        /// <param name="fin">No hay documentación de metadatos disponible.</param>
        public ObjectResult<IngresosFechas_Result> IngresosFechas(Nullable<global::System.DateTime> inicio, Nullable<global::System.DateTime> fin)
        {
            ObjectParameter inicioParameter;
            if (inicio.HasValue)
            {
                inicioParameter = new ObjectParameter("inicio", inicio);
            }
            else
            {
                inicioParameter = new ObjectParameter("inicio", typeof(global::System.DateTime));
            }
    
            ObjectParameter finParameter;
            if (fin.HasValue)
            {
                finParameter = new ObjectParameter("fin", fin);
            }
            else
            {
                finParameter = new ObjectParameter("fin", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<IngresosFechas_Result>("IngresosFechas", inicioParameter, finParameter);
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        /// <param name="inicio">No hay documentación de metadatos disponible.</param>
        /// <param name="fin">No hay documentación de metadatos disponible.</param>
        public ObjectResult<ServiciosPrestados_Result> ServiciosPrestados(Nullable<global::System.DateTime> inicio, Nullable<global::System.DateTime> fin)
        {
            ObjectParameter inicioParameter;
            if (inicio.HasValue)
            {
                inicioParameter = new ObjectParameter("inicio", inicio);
            }
            else
            {
                inicioParameter = new ObjectParameter("inicio", typeof(global::System.DateTime));
            }
    
            ObjectParameter finParameter;
            if (fin.HasValue)
            {
                finParameter = new ObjectParameter("fin", fin);
            }
            else
            {
                finParameter = new ObjectParameter("fin", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<ServiciosPrestados_Result>("ServiciosPrestados", inicioParameter, finParameter);
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        /// <param name="fecha">No hay documentación de metadatos disponible.</param>
        public ObjectResult<IngresosDia_Result> IngresosDia(Nullable<global::System.DateTime> fecha)
        {
            ObjectParameter fechaParameter;
            if (fecha.HasValue)
            {
                fechaParameter = new ObjectParameter("fecha", fecha);
            }
            else
            {
                fechaParameter = new ObjectParameter("fecha", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<IngresosDia_Result>("IngresosDia", fechaParameter);
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        /// <param name="inicio">No hay documentación de metadatos disponible.</param>
        /// <param name="fin">No hay documentación de metadatos disponible.</param>
        public ObjectResult<EstudiosRealizados_Result> EstudiosRealizados(Nullable<global::System.DateTime> inicio, Nullable<global::System.DateTime> fin)
        {
            ObjectParameter inicioParameter;
            if (inicio.HasValue)
            {
                inicioParameter = new ObjectParameter("inicio", inicio);
            }
            else
            {
                inicioParameter = new ObjectParameter("inicio", typeof(global::System.DateTime));
            }
    
            ObjectParameter finParameter;
            if (fin.HasValue)
            {
                finParameter = new ObjectParameter("fin", fin);
            }
            else
            {
                finParameter = new ObjectParameter("fin", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<EstudiosRealizados_Result>("EstudiosRealizados", inicioParameter, finParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entidades
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="Area")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Area : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Area.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="nombre">Valor inicial de la propiedad Nombre.</param>
        public static Area CreateArea(global::System.Byte id, global::System.String nombre)
        {
            Area area = new Area();
            area.Id = id;
            area.Nombre = nombre;
            return area;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Byte _Id;
        partial void OnIdChanging(global::System.Byte value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            set
            {
                OnNombreChanging(value);
                ReportPropertyChanging("Nombre");
                _Nombre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nombre");
                OnNombreChanged();
            }
        }
        private global::System.String _Nombre;
        partial void OnNombreChanging(global::System.String value);
        partial void OnNombreChanged();

        #endregion
    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_AreaMedico_AreaCategoria", "AreaMedico")]
        public EntityCollection<AreaMedico> AreaMedico
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AreaMedico>("DBModel.FK_AreaMedico_AreaCategoria", "AreaMedico");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AreaMedico>("DBModel.FK_AreaMedico_AreaCategoria", "AreaMedico", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="AreaMedico")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AreaMedico : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto AreaMedico.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="idMedico">Valor inicial de la propiedad IdMedico.</param>
        /// <param name="idArea">Valor inicial de la propiedad IdArea.</param>
        public static AreaMedico CreateAreaMedico(global::System.Int32 id, global::System.Int32 idMedico, global::System.Byte idArea)
        {
            AreaMedico areaMedico = new AreaMedico();
            areaMedico.Id = id;
            areaMedico.IdMedico = idMedico;
            areaMedico.IdArea = idArea;
            return areaMedico;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdMedico
        {
            get
            {
                return _IdMedico;
            }
            set
            {
                OnIdMedicoChanging(value);
                ReportPropertyChanging("IdMedico");
                _IdMedico = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdMedico");
                OnIdMedicoChanged();
            }
        }
        private global::System.Int32 _IdMedico;
        partial void OnIdMedicoChanging(global::System.Int32 value);
        partial void OnIdMedicoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte IdArea
        {
            get
            {
                return _IdArea;
            }
            set
            {
                OnIdAreaChanging(value);
                ReportPropertyChanging("IdArea");
                _IdArea = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdArea");
                OnIdAreaChanged();
            }
        }
        private global::System.Byte _IdArea;
        partial void OnIdAreaChanging(global::System.Byte value);
        partial void OnIdAreaChanged();

        #endregion
    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_AreaMedico_AreaCategoria", "Area")]
        public Area Area
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("DBModel.FK_AreaMedico_AreaCategoria", "Area").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("DBModel.FK_AreaMedico_AreaCategoria", "Area").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Area> AreaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("DBModel.FK_AreaMedico_AreaCategoria", "Area");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Area>("DBModel.FK_AreaMedico_AreaCategoria", "Area", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_AreaMedico_MedicoCE", "MedicoCE")]
        public MedicoCE MedicoCE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicoCE>("DBModel.FK_AreaMedico_MedicoCE", "MedicoCE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicoCE>("DBModel.FK_AreaMedico_MedicoCE", "MedicoCE").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicoCE> MedicoCEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicoCE>("DBModel.FK_AreaMedico_MedicoCE", "MedicoCE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicoCE>("DBModel.FK_AreaMedico_MedicoCE", "MedicoCE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="DetalleServicio")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DetalleServicio : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto DetalleServicio.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="idServicio">Valor inicial de la propiedad IdServicio.</param>
        /// <param name="idEstudio">Valor inicial de la propiedad IdEstudio.</param>
        /// <param name="precio">Valor inicial de la propiedad Precio.</param>
        public static DetalleServicio CreateDetalleServicio(global::System.Int32 id, global::System.Int32 idServicio, global::System.Int32 idEstudio, global::System.Decimal precio)
        {
            DetalleServicio detalleServicio = new DetalleServicio();
            detalleServicio.Id = id;
            detalleServicio.IdServicio = idServicio;
            detalleServicio.IdEstudio = idEstudio;
            detalleServicio.Precio = precio;
            return detalleServicio;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdServicio
        {
            get
            {
                return _IdServicio;
            }
            set
            {
                OnIdServicioChanging(value);
                ReportPropertyChanging("IdServicio");
                _IdServicio = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdServicio");
                OnIdServicioChanged();
            }
        }
        private global::System.Int32 _IdServicio;
        partial void OnIdServicioChanging(global::System.Int32 value);
        partial void OnIdServicioChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdEstudio
        {
            get
            {
                return _IdEstudio;
            }
            set
            {
                OnIdEstudioChanging(value);
                ReportPropertyChanging("IdEstudio");
                _IdEstudio = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdEstudio");
                OnIdEstudioChanged();
            }
        }
        private global::System.Int32 _IdEstudio;
        partial void OnIdEstudioChanging(global::System.Int32 value);
        partial void OnIdEstudioChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Precio
        {
            get
            {
                return _Precio;
            }
            set
            {
                OnPrecioChanging(value);
                ReportPropertyChanging("Precio");
                _Precio = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Precio");
                OnPrecioChanged();
            }
        }
        private global::System.Decimal _Precio;
        partial void OnPrecioChanging(global::System.Decimal value);
        partial void OnPrecioChanged();

        #endregion
    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_DetalleServicio_Estudio", "Estudio")]
        public Estudio Estudio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Estudio>("DBModel.FK_DetalleServicio_Estudio", "Estudio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Estudio>("DBModel.FK_DetalleServicio_Estudio", "Estudio").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Estudio> EstudioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Estudio>("DBModel.FK_DetalleServicio_Estudio", "Estudio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Estudio>("DBModel.FK_DetalleServicio_Estudio", "Estudio", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_DetalleServicio_Servicio", "Servicio")]
        public Servicio Servicio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Servicio>("DBModel.FK_DetalleServicio_Servicio", "Servicio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Servicio>("DBModel.FK_DetalleServicio_Servicio", "Servicio").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Servicio> ServicioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Servicio>("DBModel.FK_DetalleServicio_Servicio", "Servicio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Servicio>("DBModel.FK_DetalleServicio_Servicio", "Servicio", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="Diagnostico")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Diagnostico : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Diagnostico.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="idServicio">Valor inicial de la propiedad IdServicio.</param>
        /// <param name="resultado">Valor inicial de la propiedad Resultado.</param>
        public static Diagnostico CreateDiagnostico(global::System.Int32 id, global::System.Int32 idServicio, global::System.String resultado)
        {
            Diagnostico diagnostico = new Diagnostico();
            diagnostico.Id = id;
            diagnostico.IdServicio = idServicio;
            diagnostico.Resultado = resultado;
            return diagnostico;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdServicio
        {
            get
            {
                return _IdServicio;
            }
            set
            {
                OnIdServicioChanging(value);
                ReportPropertyChanging("IdServicio");
                _IdServicio = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdServicio");
                OnIdServicioChanged();
            }
        }
        private global::System.Int32 _IdServicio;
        partial void OnIdServicioChanging(global::System.Int32 value);
        partial void OnIdServicioChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Resultado
        {
            get
            {
                return _Resultado;
            }
            set
            {
                OnResultadoChanging(value);
                ReportPropertyChanging("Resultado");
                _Resultado = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Resultado");
                OnResultadoChanged();
            }
        }
        private global::System.String _Resultado;
        partial void OnResultadoChanging(global::System.String value);
        partial void OnResultadoChanged();

        #endregion
    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_Diagnostico_Servicio", "Servicio")]
        public Servicio Servicio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Servicio>("DBModel.FK_Diagnostico_Servicio", "Servicio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Servicio>("DBModel.FK_Diagnostico_Servicio", "Servicio").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Servicio> ServicioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Servicio>("DBModel.FK_Diagnostico_Servicio", "Servicio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Servicio>("DBModel.FK_Diagnostico_Servicio", "Servicio", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="EstadoServicio")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EstadoServicio : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto EstadoServicio.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="nombre">Valor inicial de la propiedad Nombre.</param>
        public static EstadoServicio CreateEstadoServicio(global::System.Byte id, global::System.String nombre)
        {
            EstadoServicio estadoServicio = new EstadoServicio();
            estadoServicio.Id = id;
            estadoServicio.Nombre = nombre;
            return estadoServicio;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Byte _Id;
        partial void OnIdChanging(global::System.Byte value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            set
            {
                OnNombreChanging(value);
                ReportPropertyChanging("Nombre");
                _Nombre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nombre");
                OnNombreChanged();
            }
        }
        private global::System.String _Nombre;
        partial void OnNombreChanging(global::System.String value);
        partial void OnNombreChanged();

        #endregion
    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_Servicio_EstadoServicio", "Servicio")]
        public EntityCollection<Servicio> Servicio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Servicio>("DBModel.FK_Servicio_EstadoServicio", "Servicio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Servicio>("DBModel.FK_Servicio_EstadoServicio", "Servicio", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="Estudio")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Estudio : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Estudio.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="nombre">Valor inicial de la propiedad Nombre.</param>
        /// <param name="descripcion">Valor inicial de la propiedad Descripcion.</param>
        /// <param name="categoria">Valor inicial de la propiedad Categoria.</param>
        /// <param name="costo">Valor inicial de la propiedad Costo.</param>
        /// <param name="activo">Valor inicial de la propiedad Activo.</param>
        public static Estudio CreateEstudio(global::System.Int32 id, global::System.String nombre, global::System.String descripcion, global::System.String categoria, global::System.Decimal costo, global::System.Boolean activo)
        {
            Estudio estudio = new Estudio();
            estudio.Id = id;
            estudio.Nombre = nombre;
            estudio.Descripcion = descripcion;
            estudio.Categoria = categoria;
            estudio.Costo = costo;
            estudio.Activo = activo;
            return estudio;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            set
            {
                OnNombreChanging(value);
                ReportPropertyChanging("Nombre");
                _Nombre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nombre");
                OnNombreChanged();
            }
        }
        private global::System.String _Nombre;
        partial void OnNombreChanging(global::System.String value);
        partial void OnNombreChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Descripcion
        {
            get
            {
                return _Descripcion;
            }
            set
            {
                OnDescripcionChanging(value);
                ReportPropertyChanging("Descripcion");
                _Descripcion = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Descripcion");
                OnDescripcionChanged();
            }
        }
        private global::System.String _Descripcion;
        partial void OnDescripcionChanging(global::System.String value);
        partial void OnDescripcionChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Categoria
        {
            get
            {
                return _Categoria;
            }
            set
            {
                OnCategoriaChanging(value);
                ReportPropertyChanging("Categoria");
                _Categoria = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Categoria");
                OnCategoriaChanged();
            }
        }
        private global::System.String _Categoria;
        partial void OnCategoriaChanging(global::System.String value);
        partial void OnCategoriaChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Costo
        {
            get
            {
                return _Costo;
            }
            set
            {
                OnCostoChanging(value);
                ReportPropertyChanging("Costo");
                _Costo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Costo");
                OnCostoChanged();
            }
        }
        private global::System.Decimal _Costo;
        partial void OnCostoChanging(global::System.Decimal value);
        partial void OnCostoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Activo
        {
            get
            {
                return _Activo;
            }
            set
            {
                OnActivoChanging(value);
                ReportPropertyChanging("Activo");
                _Activo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Activo");
                OnActivoChanged();
            }
        }
        private global::System.Boolean _Activo;
        partial void OnActivoChanging(global::System.Boolean value);
        partial void OnActivoChanged();

        #endregion
    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_DetalleServicio_Estudio", "DetalleServicio")]
        public EntityCollection<DetalleServicio> DetalleServicio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DetalleServicio>("DBModel.FK_DetalleServicio_Estudio", "DetalleServicio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DetalleServicio>("DBModel.FK_DetalleServicio_Estudio", "DetalleServicio", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="LugarResidencia")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LugarResidencia : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto LugarResidencia.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="nombre">Valor inicial de la propiedad Nombre.</param>
        public static LugarResidencia CreateLugarResidencia(global::System.Int32 id, global::System.String nombre)
        {
            LugarResidencia lugarResidencia = new LugarResidencia();
            lugarResidencia.Id = id;
            lugarResidencia.Nombre = nombre;
            return lugarResidencia;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            set
            {
                OnNombreChanging(value);
                ReportPropertyChanging("Nombre");
                _Nombre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nombre");
                OnNombreChanged();
            }
        }
        private global::System.String _Nombre;
        partial void OnNombreChanging(global::System.String value);
        partial void OnNombreChanged();

        #endregion
    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_Paciente_LugarResidencia", "Paciente")]
        public EntityCollection<Paciente> Paciente
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Paciente>("DBModel.FK_Paciente_LugarResidencia", "Paciente");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Paciente>("DBModel.FK_Paciente_LugarResidencia", "Paciente", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="MedicoCanalizador")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicoCanalizador : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto MedicoCanalizador.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="nombre">Valor inicial de la propiedad Nombre.</param>
        /// <param name="apellidos">Valor inicial de la propiedad Apellidos.</param>
        /// <param name="cedulaProfesional">Valor inicial de la propiedad CedulaProfesional.</param>
        public static MedicoCanalizador CreateMedicoCanalizador(global::System.Int32 id, global::System.String nombre, global::System.String apellidos, global::System.Int32 cedulaProfesional)
        {
            MedicoCanalizador medicoCanalizador = new MedicoCanalizador();
            medicoCanalizador.Id = id;
            medicoCanalizador.Nombre = nombre;
            medicoCanalizador.Apellidos = apellidos;
            medicoCanalizador.CedulaProfesional = cedulaProfesional;
            return medicoCanalizador;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            set
            {
                OnNombreChanging(value);
                ReportPropertyChanging("Nombre");
                _Nombre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nombre");
                OnNombreChanged();
            }
        }
        private global::System.String _Nombre;
        partial void OnNombreChanging(global::System.String value);
        partial void OnNombreChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Apellidos
        {
            get
            {
                return _Apellidos;
            }
            set
            {
                OnApellidosChanging(value);
                ReportPropertyChanging("Apellidos");
                _Apellidos = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Apellidos");
                OnApellidosChanged();
            }
        }
        private global::System.String _Apellidos;
        partial void OnApellidosChanging(global::System.String value);
        partial void OnApellidosChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CedulaProfesional
        {
            get
            {
                return _CedulaProfesional;
            }
            set
            {
                OnCedulaProfesionalChanging(value);
                ReportPropertyChanging("CedulaProfesional");
                _CedulaProfesional = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CedulaProfesional");
                OnCedulaProfesionalChanged();
            }
        }
        private global::System.Int32 _CedulaProfesional;
        partial void OnCedulaProfesionalChanging(global::System.Int32 value);
        partial void OnCedulaProfesionalChanged();

        #endregion
    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_Servicio_MedicoCanalizador", "Servicio")]
        public EntityCollection<Servicio> Servicio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Servicio>("DBModel.FK_Servicio_MedicoCanalizador", "Servicio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Servicio>("DBModel.FK_Servicio_MedicoCanalizador", "Servicio", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="MedicoCE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicoCE : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto MedicoCE.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="nombre">Valor inicial de la propiedad Nombre.</param>
        /// <param name="apellidos">Valor inicial de la propiedad Apellidos.</param>
        /// <param name="especialidad">Valor inicial de la propiedad Especialidad.</param>
        /// <param name="cedulaProfesional">Valor inicial de la propiedad CedulaProfesional.</param>
        public static MedicoCE CreateMedicoCE(global::System.Int32 id, global::System.String nombre, global::System.String apellidos, global::System.String especialidad, global::System.Int32 cedulaProfesional)
        {
            MedicoCE medicoCE = new MedicoCE();
            medicoCE.Id = id;
            medicoCE.Nombre = nombre;
            medicoCE.Apellidos = apellidos;
            medicoCE.Especialidad = especialidad;
            medicoCE.CedulaProfesional = cedulaProfesional;
            return medicoCE;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            set
            {
                OnNombreChanging(value);
                ReportPropertyChanging("Nombre");
                _Nombre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nombre");
                OnNombreChanged();
            }
        }
        private global::System.String _Nombre;
        partial void OnNombreChanging(global::System.String value);
        partial void OnNombreChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Apellidos
        {
            get
            {
                return _Apellidos;
            }
            set
            {
                OnApellidosChanging(value);
                ReportPropertyChanging("Apellidos");
                _Apellidos = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Apellidos");
                OnApellidosChanged();
            }
        }
        private global::System.String _Apellidos;
        partial void OnApellidosChanging(global::System.String value);
        partial void OnApellidosChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Especialidad
        {
            get
            {
                return _Especialidad;
            }
            set
            {
                OnEspecialidadChanging(value);
                ReportPropertyChanging("Especialidad");
                _Especialidad = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Especialidad");
                OnEspecialidadChanged();
            }
        }
        private global::System.String _Especialidad;
        partial void OnEspecialidadChanging(global::System.String value);
        partial void OnEspecialidadChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CedulaProfesional
        {
            get
            {
                return _CedulaProfesional;
            }
            set
            {
                OnCedulaProfesionalChanging(value);
                ReportPropertyChanging("CedulaProfesional");
                _CedulaProfesional = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CedulaProfesional");
                OnCedulaProfesionalChanged();
            }
        }
        private global::System.Int32 _CedulaProfesional;
        partial void OnCedulaProfesionalChanging(global::System.Int32 value);
        partial void OnCedulaProfesionalChanged();

        #endregion
    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_AreaMedico_MedicoCE", "AreaMedico")]
        public EntityCollection<AreaMedico> AreaMedico
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AreaMedico>("DBModel.FK_AreaMedico_MedicoCE", "AreaMedico");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AreaMedico>("DBModel.FK_AreaMedico_MedicoCE", "AreaMedico", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_Servicio_MedicoCE", "Servicio")]
        public EntityCollection<Servicio> Servicio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Servicio>("DBModel.FK_Servicio_MedicoCE", "Servicio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Servicio>("DBModel.FK_Servicio_MedicoCE", "Servicio", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_UsuarioMedico_MedicoCE", "UsuarioMedico")]
        public EntityCollection<UsuarioMedico> UsuarioMedico
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsuarioMedico>("DBModel.FK_UsuarioMedico_MedicoCE", "UsuarioMedico");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsuarioMedico>("DBModel.FK_UsuarioMedico_MedicoCE", "UsuarioMedico", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="Paciente")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Paciente : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Paciente.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="nombre">Valor inicial de la propiedad Nombre.</param>
        /// <param name="apellidos">Valor inicial de la propiedad Apellidos.</param>
        /// <param name="edad">Valor inicial de la propiedad Edad.</param>
        /// <param name="sexo">Valor inicial de la propiedad Sexo.</param>
        /// <param name="idLugarResidencia">Valor inicial de la propiedad IdLugarResidencia.</param>
        public static Paciente CreatePaciente(global::System.Int32 id, global::System.String nombre, global::System.String apellidos, global::System.Byte edad, global::System.String sexo, global::System.Int32 idLugarResidencia)
        {
            Paciente paciente = new Paciente();
            paciente.Id = id;
            paciente.Nombre = nombre;
            paciente.Apellidos = apellidos;
            paciente.Edad = edad;
            paciente.Sexo = sexo;
            paciente.IdLugarResidencia = idLugarResidencia;
            return paciente;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            set
            {
                OnNombreChanging(value);
                ReportPropertyChanging("Nombre");
                _Nombre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nombre");
                OnNombreChanged();
            }
        }
        private global::System.String _Nombre;
        partial void OnNombreChanging(global::System.String value);
        partial void OnNombreChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Apellidos
        {
            get
            {
                return _Apellidos;
            }
            set
            {
                OnApellidosChanging(value);
                ReportPropertyChanging("Apellidos");
                _Apellidos = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Apellidos");
                OnApellidosChanged();
            }
        }
        private global::System.String _Apellidos;
        partial void OnApellidosChanging(global::System.String value);
        partial void OnApellidosChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Edad
        {
            get
            {
                return _Edad;
            }
            set
            {
                OnEdadChanging(value);
                ReportPropertyChanging("Edad");
                _Edad = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Edad");
                OnEdadChanged();
            }
        }
        private global::System.Byte _Edad;
        partial void OnEdadChanging(global::System.Byte value);
        partial void OnEdadChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Sexo
        {
            get
            {
                return _Sexo;
            }
            set
            {
                OnSexoChanging(value);
                ReportPropertyChanging("Sexo");
                _Sexo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Sexo");
                OnSexoChanged();
            }
        }
        private global::System.String _Sexo;
        partial void OnSexoChanging(global::System.String value);
        partial void OnSexoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdLugarResidencia
        {
            get
            {
                return _IdLugarResidencia;
            }
            set
            {
                OnIdLugarResidenciaChanging(value);
                ReportPropertyChanging("IdLugarResidencia");
                _IdLugarResidencia = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdLugarResidencia");
                OnIdLugarResidenciaChanged();
            }
        }
        private global::System.Int32 _IdLugarResidencia;
        partial void OnIdLugarResidenciaChanging(global::System.Int32 value);
        partial void OnIdLugarResidenciaChanged();

        #endregion
    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_Paciente_LugarResidencia", "LugarResidencia")]
        public LugarResidencia LugarResidencia
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LugarResidencia>("DBModel.FK_Paciente_LugarResidencia", "LugarResidencia").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LugarResidencia>("DBModel.FK_Paciente_LugarResidencia", "LugarResidencia").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LugarResidencia> LugarResidenciaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LugarResidencia>("DBModel.FK_Paciente_LugarResidencia", "LugarResidencia");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LugarResidencia>("DBModel.FK_Paciente_LugarResidencia", "LugarResidencia", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_Servicio_Paciente", "Servicio")]
        public EntityCollection<Servicio> Servicio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Servicio>("DBModel.FK_Servicio_Paciente", "Servicio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Servicio>("DBModel.FK_Servicio_Paciente", "Servicio", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="Rol")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rol : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Rol.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="nombre">Valor inicial de la propiedad Nombre.</param>
        /// <param name="idUsuario">Valor inicial de la propiedad IdUsuario.</param>
        public static Rol CreateRol(global::System.Int32 id, global::System.String nombre, global::System.Int32 idUsuario)
        {
            Rol rol = new Rol();
            rol.Id = id;
            rol.Nombre = nombre;
            rol.IdUsuario = idUsuario;
            return rol;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            set
            {
                OnNombreChanging(value);
                ReportPropertyChanging("Nombre");
                _Nombre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nombre");
                OnNombreChanged();
            }
        }
        private global::System.String _Nombre;
        partial void OnNombreChanging(global::System.String value);
        partial void OnNombreChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdUsuario
        {
            get
            {
                return _IdUsuario;
            }
            set
            {
                OnIdUsuarioChanging(value);
                ReportPropertyChanging("IdUsuario");
                _IdUsuario = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdUsuario");
                OnIdUsuarioChanged();
            }
        }
        private global::System.Int32 _IdUsuario;
        partial void OnIdUsuarioChanging(global::System.Int32 value);
        partial void OnIdUsuarioChanged();

        #endregion
    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_Rol_Usuario", "Usuario")]
        public Usuario Usuario
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usuario>("DBModel.FK_Rol_Usuario", "Usuario").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usuario>("DBModel.FK_Rol_Usuario", "Usuario").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Usuario> UsuarioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usuario>("DBModel.FK_Rol_Usuario", "Usuario");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Usuario>("DBModel.FK_Rol_Usuario", "Usuario", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="Servicio")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Servicio : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Servicio.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="fecha">Valor inicial de la propiedad Fecha.</param>
        /// <param name="idPaciente">Valor inicial de la propiedad IdPaciente.</param>
        /// <param name="idMedicoCanalizador">Valor inicial de la propiedad IdMedicoCanalizador.</param>
        /// <param name="idMedicoResponsable">Valor inicial de la propiedad IdMedicoResponsable.</param>
        /// <param name="idEstado">Valor inicial de la propiedad IdEstado.</param>
        /// <param name="pagado">Valor inicial de la propiedad Pagado.</param>
        public static Servicio CreateServicio(global::System.Int32 id, global::System.DateTime fecha, global::System.Int32 idPaciente, global::System.Int32 idMedicoCanalizador, global::System.Int32 idMedicoResponsable, global::System.Byte idEstado, global::System.Boolean pagado)
        {
            Servicio servicio = new Servicio();
            servicio.Id = id;
            servicio.Fecha = fecha;
            servicio.IdPaciente = idPaciente;
            servicio.IdMedicoCanalizador = idMedicoCanalizador;
            servicio.IdMedicoResponsable = idMedicoResponsable;
            servicio.IdEstado = idEstado;
            servicio.Pagado = pagado;
            return servicio;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Fecha
        {
            get
            {
                return _Fecha;
            }
            set
            {
                OnFechaChanging(value);
                ReportPropertyChanging("Fecha");
                _Fecha = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Fecha");
                OnFechaChanged();
            }
        }
        private global::System.DateTime _Fecha;
        partial void OnFechaChanging(global::System.DateTime value);
        partial void OnFechaChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdPaciente
        {
            get
            {
                return _IdPaciente;
            }
            set
            {
                OnIdPacienteChanging(value);
                ReportPropertyChanging("IdPaciente");
                _IdPaciente = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdPaciente");
                OnIdPacienteChanged();
            }
        }
        private global::System.Int32 _IdPaciente;
        partial void OnIdPacienteChanging(global::System.Int32 value);
        partial void OnIdPacienteChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdMedicoCanalizador
        {
            get
            {
                return _IdMedicoCanalizador;
            }
            set
            {
                OnIdMedicoCanalizadorChanging(value);
                ReportPropertyChanging("IdMedicoCanalizador");
                _IdMedicoCanalizador = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdMedicoCanalizador");
                OnIdMedicoCanalizadorChanged();
            }
        }
        private global::System.Int32 _IdMedicoCanalizador;
        partial void OnIdMedicoCanalizadorChanging(global::System.Int32 value);
        partial void OnIdMedicoCanalizadorChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdMedicoResponsable
        {
            get
            {
                return _IdMedicoResponsable;
            }
            set
            {
                OnIdMedicoResponsableChanging(value);
                ReportPropertyChanging("IdMedicoResponsable");
                _IdMedicoResponsable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdMedicoResponsable");
                OnIdMedicoResponsableChanged();
            }
        }
        private global::System.Int32 _IdMedicoResponsable;
        partial void OnIdMedicoResponsableChanging(global::System.Int32 value);
        partial void OnIdMedicoResponsableChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte IdEstado
        {
            get
            {
                return _IdEstado;
            }
            set
            {
                OnIdEstadoChanging(value);
                ReportPropertyChanging("IdEstado");
                _IdEstado = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdEstado");
                OnIdEstadoChanged();
            }
        }
        private global::System.Byte _IdEstado;
        partial void OnIdEstadoChanging(global::System.Byte value);
        partial void OnIdEstadoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Pagado
        {
            get
            {
                return _Pagado;
            }
            set
            {
                OnPagadoChanging(value);
                ReportPropertyChanging("Pagado");
                _Pagado = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Pagado");
                OnPagadoChanged();
            }
        }
        private global::System.Boolean _Pagado;
        partial void OnPagadoChanging(global::System.Boolean value);
        partial void OnPagadoChanged();

        #endregion
    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_DetalleServicio_Servicio", "DetalleServicio")]
        public EntityCollection<DetalleServicio> DetalleServicio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DetalleServicio>("DBModel.FK_DetalleServicio_Servicio", "DetalleServicio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DetalleServicio>("DBModel.FK_DetalleServicio_Servicio", "DetalleServicio", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_Diagnostico_Servicio", "Diagnostico")]
        public EntityCollection<Diagnostico> Diagnostico
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Diagnostico>("DBModel.FK_Diagnostico_Servicio", "Diagnostico");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Diagnostico>("DBModel.FK_Diagnostico_Servicio", "Diagnostico", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_Servicio_EstadoServicio", "EstadoServicio")]
        public EstadoServicio EstadoServicio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EstadoServicio>("DBModel.FK_Servicio_EstadoServicio", "EstadoServicio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EstadoServicio>("DBModel.FK_Servicio_EstadoServicio", "EstadoServicio").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EstadoServicio> EstadoServicioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EstadoServicio>("DBModel.FK_Servicio_EstadoServicio", "EstadoServicio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EstadoServicio>("DBModel.FK_Servicio_EstadoServicio", "EstadoServicio", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_Servicio_MedicoCanalizador", "MedicoCanalizador")]
        public MedicoCanalizador MedicoCanalizador
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicoCanalizador>("DBModel.FK_Servicio_MedicoCanalizador", "MedicoCanalizador").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicoCanalizador>("DBModel.FK_Servicio_MedicoCanalizador", "MedicoCanalizador").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicoCanalizador> MedicoCanalizadorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicoCanalizador>("DBModel.FK_Servicio_MedicoCanalizador", "MedicoCanalizador");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicoCanalizador>("DBModel.FK_Servicio_MedicoCanalizador", "MedicoCanalizador", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_Servicio_MedicoCE", "MedicoCE")]
        public MedicoCE MedicoCE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicoCE>("DBModel.FK_Servicio_MedicoCE", "MedicoCE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicoCE>("DBModel.FK_Servicio_MedicoCE", "MedicoCE").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicoCE> MedicoCEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicoCE>("DBModel.FK_Servicio_MedicoCE", "MedicoCE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicoCE>("DBModel.FK_Servicio_MedicoCE", "MedicoCE", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_Servicio_Paciente", "Paciente")]
        public Paciente Paciente
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("DBModel.FK_Servicio_Paciente", "Paciente").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("DBModel.FK_Servicio_Paciente", "Paciente").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Paciente> PacienteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("DBModel.FK_Servicio_Paciente", "Paciente");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Paciente>("DBModel.FK_Servicio_Paciente", "Paciente", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="Usuario")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Usuario : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Usuario.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="nombre">Valor inicial de la propiedad Nombre.</param>
        /// <param name="apellidos">Valor inicial de la propiedad Apellidos.</param>
        /// <param name="nombreUsuario">Valor inicial de la propiedad NombreUsuario.</param>
        /// <param name="password">Valor inicial de la propiedad Password.</param>
        /// <param name="activo">Valor inicial de la propiedad Activo.</param>
        public static Usuario CreateUsuario(global::System.Int32 id, global::System.String nombre, global::System.String apellidos, global::System.String nombreUsuario, global::System.String password, global::System.Boolean activo)
        {
            Usuario usuario = new Usuario();
            usuario.Id = id;
            usuario.Nombre = nombre;
            usuario.Apellidos = apellidos;
            usuario.NombreUsuario = nombreUsuario;
            usuario.Password = password;
            usuario.Activo = activo;
            return usuario;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            set
            {
                OnNombreChanging(value);
                ReportPropertyChanging("Nombre");
                _Nombre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nombre");
                OnNombreChanged();
            }
        }
        private global::System.String _Nombre;
        partial void OnNombreChanging(global::System.String value);
        partial void OnNombreChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Apellidos
        {
            get
            {
                return _Apellidos;
            }
            set
            {
                OnApellidosChanging(value);
                ReportPropertyChanging("Apellidos");
                _Apellidos = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Apellidos");
                OnApellidosChanged();
            }
        }
        private global::System.String _Apellidos;
        partial void OnApellidosChanging(global::System.String value);
        partial void OnApellidosChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NombreUsuario
        {
            get
            {
                return _NombreUsuario;
            }
            set
            {
                OnNombreUsuarioChanging(value);
                ReportPropertyChanging("NombreUsuario");
                _NombreUsuario = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NombreUsuario");
                OnNombreUsuarioChanged();
            }
        }
        private global::System.String _NombreUsuario;
        partial void OnNombreUsuarioChanging(global::System.String value);
        partial void OnNombreUsuarioChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Activo
        {
            get
            {
                return _Activo;
            }
            set
            {
                OnActivoChanging(value);
                ReportPropertyChanging("Activo");
                _Activo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Activo");
                OnActivoChanged();
            }
        }
        private global::System.Boolean _Activo;
        partial void OnActivoChanging(global::System.Boolean value);
        partial void OnActivoChanged();

        #endregion
    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_Rol_Usuario", "Rol")]
        public EntityCollection<Rol> Rol
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rol>("DBModel.FK_Rol_Usuario", "Rol");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rol>("DBModel.FK_Rol_Usuario", "Rol", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_UsuarioMedico_Usuario", "UsuarioMedico")]
        public EntityCollection<UsuarioMedico> UsuarioMedico
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsuarioMedico>("DBModel.FK_UsuarioMedico_Usuario", "UsuarioMedico");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsuarioMedico>("DBModel.FK_UsuarioMedico_Usuario", "UsuarioMedico", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="UsuarioMedico")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsuarioMedico : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto UsuarioMedico.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="idUsuario">Valor inicial de la propiedad IdUsuario.</param>
        /// <param name="idMedico">Valor inicial de la propiedad IdMedico.</param>
        public static UsuarioMedico CreateUsuarioMedico(global::System.Int32 id, global::System.Int32 idUsuario, global::System.Int32 idMedico)
        {
            UsuarioMedico usuarioMedico = new UsuarioMedico();
            usuarioMedico.Id = id;
            usuarioMedico.IdUsuario = idUsuario;
            usuarioMedico.IdMedico = idMedico;
            return usuarioMedico;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdUsuario
        {
            get
            {
                return _IdUsuario;
            }
            set
            {
                OnIdUsuarioChanging(value);
                ReportPropertyChanging("IdUsuario");
                _IdUsuario = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdUsuario");
                OnIdUsuarioChanged();
            }
        }
        private global::System.Int32 _IdUsuario;
        partial void OnIdUsuarioChanging(global::System.Int32 value);
        partial void OnIdUsuarioChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdMedico
        {
            get
            {
                return _IdMedico;
            }
            set
            {
                OnIdMedicoChanging(value);
                ReportPropertyChanging("IdMedico");
                _IdMedico = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdMedico");
                OnIdMedicoChanged();
            }
        }
        private global::System.Int32 _IdMedico;
        partial void OnIdMedicoChanging(global::System.Int32 value);
        partial void OnIdMedicoChanged();

        #endregion
    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_UsuarioMedico_MedicoCE", "MedicoCE")]
        public MedicoCE MedicoCE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicoCE>("DBModel.FK_UsuarioMedico_MedicoCE", "MedicoCE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicoCE>("DBModel.FK_UsuarioMedico_MedicoCE", "MedicoCE").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicoCE> MedicoCEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicoCE>("DBModel.FK_UsuarioMedico_MedicoCE", "MedicoCE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicoCE>("DBModel.FK_UsuarioMedico_MedicoCE", "MedicoCE", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_UsuarioMedico_Usuario", "Usuario")]
        public Usuario Usuario
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usuario>("DBModel.FK_UsuarioMedico_Usuario", "Usuario").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usuario>("DBModel.FK_UsuarioMedico_Usuario", "Usuario").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Usuario> UsuarioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usuario>("DBModel.FK_UsuarioMedico_Usuario", "Usuario");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Usuario>("DBModel.FK_UsuarioMedico_Usuario", "Usuario", value);
                }
            }
        }

        #endregion
    }

    #endregion
    #region ComplexTypes
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="DBModel", Name="EstudiosRealizados_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class EstudiosRealizados_Result : ComplexObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto EstudiosRealizados_Result.
        /// </summary>
        /// <param name="iDEstudio">Valor inicial de la propiedad IDEstudio.</param>
        /// <param name="nombre">Valor inicial de la propiedad Nombre.</param>
        public static EstudiosRealizados_Result CreateEstudiosRealizados_Result(global::System.Int32 iDEstudio, global::System.String nombre)
        {
            EstudiosRealizados_Result estudiosRealizados_Result = new EstudiosRealizados_Result();
            estudiosRealizados_Result.IDEstudio = iDEstudio;
            estudiosRealizados_Result.Nombre = nombre;
            return estudiosRealizados_Result;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Fecha
        {
            get
            {
                return _Fecha;
            }
            set
            {
                OnFechaChanging(value);
                ReportPropertyChanging("Fecha");
                _Fecha = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Fecha");
                OnFechaChanged();
            }
        }
        private Nullable<global::System.DateTime> _Fecha;
        partial void OnFechaChanging(Nullable<global::System.DateTime> value);
        partial void OnFechaChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDEstudio
        {
            get
            {
                return _IDEstudio;
            }
            set
            {
                OnIDEstudioChanging(value);
                ReportPropertyChanging("IDEstudio");
                _IDEstudio = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDEstudio");
                OnIDEstudioChanged();
            }
        }
        private global::System.Int32 _IDEstudio;
        partial void OnIDEstudioChanging(global::System.Int32 value);
        partial void OnIDEstudioChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            set
            {
                OnNombreChanging(value);
                ReportPropertyChanging("Nombre");
                _Nombre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nombre");
                OnNombreChanged();
            }
        }
        private global::System.String _Nombre;
        partial void OnNombreChanging(global::System.String value);
        partial void OnNombreChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Realizados
        {
            get
            {
                return _Realizados;
            }
            set
            {
                OnRealizadosChanging(value);
                ReportPropertyChanging("Realizados");
                _Realizados = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Realizados");
                OnRealizadosChanged();
            }
        }
        private Nullable<global::System.Int32> _Realizados;
        partial void OnRealizadosChanging(Nullable<global::System.Int32> value);
        partial void OnRealizadosChanged();

        #endregion
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="DBModel", Name="IngresosDia_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class IngresosDia_Result : ComplexObject
    {
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Dia
        {
            get
            {
                return _Dia;
            }
            set
            {
                OnDiaChanging(value);
                ReportPropertyChanging("Dia");
                _Dia = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Dia");
                OnDiaChanged();
            }
        }
        private Nullable<global::System.DateTime> _Dia;
        partial void OnDiaChanging(Nullable<global::System.DateTime> value);
        partial void OnDiaChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Ingreso
        {
            get
            {
                return _Ingreso;
            }
            set
            {
                OnIngresoChanging(value);
                ReportPropertyChanging("Ingreso");
                _Ingreso = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ingreso");
                OnIngresoChanged();
            }
        }
        private Nullable<global::System.Decimal> _Ingreso;
        partial void OnIngresoChanging(Nullable<global::System.Decimal> value);
        partial void OnIngresoChanged();

        #endregion
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="DBModel", Name="IngresosFechas_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class IngresosFechas_Result : ComplexObject
    {
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Dia
        {
            get
            {
                return _Dia;
            }
            set
            {
                OnDiaChanging(value);
                ReportPropertyChanging("Dia");
                _Dia = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Dia");
                OnDiaChanged();
            }
        }
        private Nullable<global::System.DateTime> _Dia;
        partial void OnDiaChanging(Nullable<global::System.DateTime> value);
        partial void OnDiaChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Ingreso
        {
            get
            {
                return _Ingreso;
            }
            set
            {
                OnIngresoChanging(value);
                ReportPropertyChanging("Ingreso");
                _Ingreso = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ingreso");
                OnIngresoChanged();
            }
        }
        private Nullable<global::System.Decimal> _Ingreso;
        partial void OnIngresoChanging(Nullable<global::System.Decimal> value);
        partial void OnIngresoChanged();

        #endregion
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="DBModel", Name="ServiciosPrestados_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ServiciosPrestados_Result : ComplexObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto ServiciosPrestados_Result.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="paciente">Valor inicial de la propiedad Paciente.</param>
        /// <param name="solicito">Valor inicial de la propiedad Solicito.</param>
        /// <param name="atendio">Valor inicial de la propiedad Atendio.</param>
        public static ServiciosPrestados_Result CreateServiciosPrestados_Result(global::System.Int32 id, global::System.String paciente, global::System.String solicito, global::System.String atendio)
        {
            ServiciosPrestados_Result serviciosPrestados_Result = new ServiciosPrestados_Result();
            serviciosPrestados_Result.Id = id;
            serviciosPrestados_Result.Paciente = paciente;
            serviciosPrestados_Result.Solicito = solicito;
            serviciosPrestados_Result.Atendio = atendio;
            return serviciosPrestados_Result;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Paciente
        {
            get
            {
                return _Paciente;
            }
            set
            {
                OnPacienteChanging(value);
                ReportPropertyChanging("Paciente");
                _Paciente = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Paciente");
                OnPacienteChanged();
            }
        }
        private global::System.String _Paciente;
        partial void OnPacienteChanging(global::System.String value);
        partial void OnPacienteChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Solicito
        {
            get
            {
                return _Solicito;
            }
            set
            {
                OnSolicitoChanging(value);
                ReportPropertyChanging("Solicito");
                _Solicito = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Solicito");
                OnSolicitoChanged();
            }
        }
        private global::System.String _Solicito;
        partial void OnSolicitoChanging(global::System.String value);
        partial void OnSolicitoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Atendio
        {
            get
            {
                return _Atendio;
            }
            set
            {
                OnAtendioChanging(value);
                ReportPropertyChanging("Atendio");
                _Atendio = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Atendio");
                OnAtendioChanged();
            }
        }
        private global::System.String _Atendio;
        partial void OnAtendioChanging(global::System.String value);
        partial void OnAtendioChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Fecha
        {
            get
            {
                return _Fecha;
            }
            set
            {
                OnFechaChanging(value);
                ReportPropertyChanging("Fecha");
                _Fecha = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Fecha");
                OnFechaChanged();
            }
        }
        private Nullable<global::System.DateTime> _Fecha;
        partial void OnFechaChanging(Nullable<global::System.DateTime> value);
        partial void OnFechaChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Importe
        {
            get
            {
                return _Importe;
            }
            set
            {
                OnImporteChanging(value);
                ReportPropertyChanging("Importe");
                _Importe = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Importe");
                OnImporteChanged();
            }
        }
        private Nullable<global::System.Decimal> _Importe;
        partial void OnImporteChanging(Nullable<global::System.Decimal> value);
        partial void OnImporteChanged();

        #endregion
    }

    #endregion
    
}
